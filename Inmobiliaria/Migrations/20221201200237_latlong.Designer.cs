// <auto-generated />
using System;
using Inmobiliaria.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inmobiliaria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221201200237_latlong")]
    partial class latlong
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Inmobiliaria.Models.Cliente", b =>
                {
                    b.Property<int>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cliente"), 1L, 1);

                    b.Property<string>("correo_cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("dir_cliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("nombre_cliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("telefono_cliente")
                        .HasColumnType("bigint");

                    b.HasKey("id_cliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Condicion", b =>
                {
                    b.Property<int>("id_condicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_condicion"), 1L, 1);

                    b.Property<string>("des_condicion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_condicion");

                    b.ToTable("Condicion");
                });

            modelBuilder.Entity("Inmobiliaria.Models.FormaPago", b =>
                {
                    b.Property<int>("id_forma_pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_forma_pago"), 1L, 1);

                    b.Property<string>("desc_forma_Pago")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_forma_pago");

                    b.ToTable("FormaPago");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Inmueble", b =>
                {
                    b.Property<int>("id_inmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_inmueble"), 1L, 1);

                    b.Property<float>("costo_inmueble")
                        .HasColumnType("real");

                    b.Property<string>("desc_inmueble")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("id_tipo_inmueble")
                        .HasColumnType("int");

                    b.Property<double>("latitud")
                        .HasColumnType("float");

                    b.Property<double>("longitud")
                        .HasColumnType("float");

                    b.Property<string>("ubic_inmueble")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("vendido")
                        .HasColumnType("bit");

                    b.HasKey("id_inmueble");

                    b.HasIndex("id_tipo_inmueble");

                    b.ToTable("Inmueble");
                });

            modelBuilder.Entity("Inmobiliaria.Models.TipoInmueble", b =>
                {
                    b.Property<int>("id_tipo_inmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_tipo_inmueble"), 1L, 1);

                    b.Property<string>("desc_inmueble")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id_tipo_inmueble");

                    b.ToTable("TipoInmueble");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Venta", b =>
                {
                    b.Property<int>("id_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_venta"), 1L, 1);

                    b.Property<string>("desc_venta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("fecha_venta")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("id_condicion")
                        .HasColumnType("int");

                    b.Property<int>("id_forma_pago")
                        .HasColumnType("int");

                    b.Property<int>("id_inmueble")
                        .HasColumnType("int");

                    b.Property<float>("total_general")
                        .HasColumnType("real");

                    b.Property<float>("total_iva")
                        .HasColumnType("real");

                    b.Property<float>("total_venta")
                        .HasColumnType("real");

                    b.HasKey("id_venta");

                    b.HasIndex("id_cliente");

                    b.HasIndex("id_condicion");

                    b.HasIndex("id_forma_pago");

                    b.HasIndex("id_inmueble");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Inmueble", b =>
                {
                    b.HasOne("Inmobiliaria.Models.TipoInmueble", "tipoInmueble")
                        .WithMany()
                        .HasForeignKey("id_tipo_inmueble")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoInmueble");
                });

            modelBuilder.Entity("Inmobiliaria.Models.Venta", b =>
                {
                    b.HasOne("Inmobiliaria.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Condicion", "condicion")
                        .WithMany()
                        .HasForeignKey("id_condicion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.FormaPago", "formaPago")
                        .WithMany()
                        .HasForeignKey("id_forma_pago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmobiliaria.Models.Inmueble", "inmueble")
                        .WithMany()
                        .HasForeignKey("id_inmueble")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("condicion");

                    b.Navigation("formaPago");

                    b.Navigation("inmueble");
                });
#pragma warning restore 612, 618
        }
    }
}
